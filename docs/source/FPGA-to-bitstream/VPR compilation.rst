VPR compilation
===============

Compile BLIF to FASM by VPR <-- architecture.xml + routing_resources.xml


VPR (Versatile Place and Route) is a place and route tool from the VTR project that can be used to program a fabric generated by FABulous, using either Yosys or ODIN II for the logic synthesis. The VTR genfasm tool can then be used to generate a fasm file from which the bitstream can be generated.

To generate the necessary materials to program using VPR, run ``$FAB_ROOT/fabric_generator/fabric_gen_v3.py`` with the -genVPRModel flag. In the ``$FAB_ROOT/fabric_generator/vproutput`` directory, two files will be created - ``architecture.xml`` and ``routing_resources.xml``. 

architecture.xml contains a description of the various tiles, ports and BELs - everything in the architecture except for the routing resources. 

routing_resources.xml contains the specifications of these routing resources, which contains a graph within which the nodes are routing wires and ports, and the edges are the switch matrix interconnects that connect these resources.

To run the flow with ODIN II, the ``run_vtr_flow.py`` script in ``$VTR_ROOT/vtr_flow/scripts`` can be used, passing in your verilog circuit, followed by the genfasm utility.

To use Yosys (recommended with FABulous for improved functionality), the Yosys flow description can be found at :ref:`yosys` , which will output a Berkely Logic Interchange Format (BLIF) file, which can be used as an argument for the VPR executable, followed by the genfasm utility. More documentation on how to use this flow can be found in $FABulous\_root/YosysFiles/VPR\_flow/README.md

When generating the VPR model, FABulous will print out a maximum width for routing channels in the form ``Max Width: <max_width>``. This number should be noted, as it will be used as an argument when calling VPR.

To run the VPR flow (with VPR 8.1.0 installed) , the following command can be used:

.. code-block:: console

        vpr <architecture.xml> <circuit.blif> --read_rr_graph <routing_resources.xml> --route_chan_width <max_width>

``<architecture.xml>`` and ``<routing_resources.xml>`` should be paths to the corresponding files in ``$FAB_ROOT/fabric_generator/vproutput``. 

``--disp on`` can be appended to the end if a GUI is desired.

To generate FASM, you should then use the command:

.. code-block:: console

        genfasm <architecture.xml> <circuit.blif> --read_rr_graph <routing_resources.xml> --route_chan_width <max_width>` 

The genfasm utility is part of the VTR flow, so should be installed alongside VPR. While the two commands are very similar, both must be called in sequence.

